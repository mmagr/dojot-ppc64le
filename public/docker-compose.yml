version: '2'
services:

  certs:
    image: nginx
    restart: always
    depends_on:
      - apigw
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /etc/letsencrypt:/certs
      - ./certs/default.conf:/etc/nginx/conf.d/default.conf

  sth:
    image: telefonicaiot/fiware-sth-comet
    restart: always
    depends_on:
      - mongodb
    networks:
      default:
        aliases:
          - comet
          - history
    environment:
      STH_HOST: "0.0.0.0"
      DB_URI: "mongodb:27017"


  mongodb:
    image: "mongo:3.2"
    restart: always
    user: "mongodb"

  mqtt:
    image: ansi/mosquitto
    restart: always
    ports:
      - "1883:1883"

  iotagent:
    image: "iotmid-docker:5000/jenkins/iotagent-json:36a972c"
    restart: always
    depends_on:
      - mongodb
      - mqtt
    volumes:
      - ./iotagent/config.js:/opt/iotajson/config.js:Z
    ports:
      - "127.0.0.1:4041:4041"
    networks:
      default:
        aliases:
          - idas

  gui:
    image: "iotmid-docker:5000/jenkins/devm-gui:4554868"
    restart: always

  orion:
    image: fiware/orion
    restart: always
    depends_on:
      - mongodb
    ports:
      - "127.0.0.1:1026:1026"
    command: -dbhost mongodb

  # mysql:
  #   image: mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: not_safe
  #   networks:
  #     default:
  #       aliases:
  #         - mysql
  #
  # cygnus:
  #   image: fiware/cygnus-ngsi
  #   volumes:
  #     - ./cygnus/agent.conf:/opt/apache-flume/conf/agent.conf
  #   networks:
  #     default:
  #       aliases:
  #         - cygnus

  device-manager:
    image: "iotmid-docker:5000/jenkins/devicemanager:af73077"
    restart: always
    depends_on:
      - mongodb
    networks:
      default:
        aliases:
          - devm

  orch:
    image: "iotmid-docker:5000/jenkins/node-orch:508b577"
    restart: always
    depends_on:
      - mongodb
    networks:
      default:
        aliases:
          - orchestrator

  auth:
    image: "iotmid-docker:5000/jenkins/auth:24e66a7"
    restart: always
    depends_on:
      - mongodb
      - apigw

  postgres:
    image: "postgres:9.4"
    restart: always
    environment:
      POSTGRES_USER: "kong"
      POSTGRES_DB: "kong"
    networks:
      default:
        aliases:
          - kong-db

  # cassandra:
  #   image: "cassandra:2.2"
  #   networks:
  #     default:
  #       aliases:
  #         - cassandra
  #         - kong-db

  apigw:
    image: "kong:0.10.0"
    restart: always
    depends_on:
      - postgres
    ports:
      - "8000:8000"
      - "8443:8443"
      - "127.0.0.1:8001:8001"
      # - "7946:7946"
      # - "7946:7946/udp"  # cluster
    environment:
      # KONG_DATABASE: "cassandra"
      KONG_DATABASE: "postgres"
      KONG_CASSANDRA_CONTACT_POINTS: "cassandra"
      KONG_PG_HOST: "postgres"
    networks:
      default:
        aliases:
          - kong

  perseo-core:
    image: telefonicaiot/perseo-core
    restart: always
    command: -perseo_fe_url perseo-fe:9090

  perseo-fe:
    image: telefonicaiot/perseo-fe
    restart: always
    ports:
      - "127.0.0.1:9090:9090"
    depends_on:
      - perseo-core
      - mongodb
    environment:
      - PERSEO_MONGO_HOST=mongodb
      - PERSEO_CORE_URL=http://perseo-core:8080
      - PERSEO_ORION_URL=http://orion:1026/NGSI10/updateContext

  mashup:
    image: "iotmid-docker:5000/dckr/customred"
    restart: always
